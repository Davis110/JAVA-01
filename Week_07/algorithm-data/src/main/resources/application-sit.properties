#数据源
spring.shardingsphere.datasource.names=s0,s1
#默认数据源
spring.shardingsphere.sharding.default-data-source-name=s0
#数据源属性配置(可结合nacos进行配置)
spring.shardingsphere.datasource.s0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.s0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.s0.jdbc-url=jdbc:mysql://127.0.0.1:3306/order_0
spring.shardingsphere.datasource.s0.username=root
spring.shardingsphere.datasource.s0.password=123456

#数据源属性配置(可结合nacos进行配置)
spring.shardingsphere.datasource.s1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.s1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.s1.jdbc-url=jdbc:mysql://127.0.0.1:3306/order_1
spring.shardingsphere.datasource.s1.username=root
spring.shardingsphere.datasource.s1.password=123456
#实际节点
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=s$->{0..1}.t_order_$->{0..1}
#分库策略
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-algorithm-name=database_inline
spring.shardingsphere.rules.sharding.sharding-algorithms.database_inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database_inline.props.algorithm-expression=s_$->{user_id % 2}

#分表策略
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 2}
#spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.precise-algorithm-class-name=com.algorithm.data.shardingSphere.OrderIdStrategy
spring.shardingsphere.sharding.tables.device.key-generator.column=order_id
spring.shardingsphere.sharding.tables.device.key-generator.type=SNOWFLAKE

# 是否打印sql
spring.shardingsphere.props.sql.show=true

