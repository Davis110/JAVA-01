spring.shardingsphere.datasource.names=db0,db1
spring.shardingsphere.datasource.common.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.common.driver-class-name=com.mysql.jdbc.Driver

spring.shardingsphere.datasource.db0.url=jdbc:mysql://127.0.0.1:3306/order_1?useSSL=false
spring.shardingsphere.datasource.db0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.db0.username=root
spring.shardingsphere.datasource.db0.password=123456

spring.shardingsphere.datasource.db1.url=jdbc:mysql://192.168.91.1:3306/order_0?useSSL=false
spring.shardingsphere.datasource.db1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.db1.username=coder
spring.shardingsphere.datasource.db1.password=1qaz@WSX
# 配置 order_info 表规则
spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=db$->{0..1}.t_order_->{0..1}
# 配置分库策略
spring.shardingsphere.rules.sharding.tables.t_user.database-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.t_user.database-strategy.standard.sharding-algorithm-name=database_inline
# 配置分表策略ShardingDataSourceFactory
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=table_inline
# 配置 分片算法
spring.shardingsphere.rules.sharding.sharding-algorithms.database_inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database_inline.props.algorithm-expression=t_user_{id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.table_inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.table_inline.props.algorithm-expression=t_order_{order_id % 2}
spring.shardingsphere.rules.read-write-splitting.data-sources.<read-write-splitting-data-source-name>.write-data-source-name=db0
spring.shardingsphere.rules.read-write-splitting.data-sources.<read-write-splitting-data-source-name>.read-data-source-names=db1
spring.shardingsphere.rules.read-write-splitting.data-sources.<read-write-splitting-data-source-name>.load-balancer-name=# 负载均衡算法名称
# 负载均衡算法配置
spring.shardingsphere.rules.read-write-splitting.load-balancers.<load-balance-algorithm-name>.type=RANDOM
spring.shardingsphere.rules.read-write-splitting.load-balancers.<load-balance-algorithm-name>.props.xxx=# 负载均衡算法属性配置

